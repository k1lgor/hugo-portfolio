[{"authors":null,"categories":null,"content":"I have a positive attitude and can easily adapt to new things. I‚Äôm a fast learner and excited to learn about the latest technologies. The TV show Mr. Robot played a major role in my decision to change my career.\n","date":1683763200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1683763200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I have a positive attitude and can easily adapt to new things. I‚Äôm a fast learner and excited to learn about the latest technologies. The TV show Mr. Robot played a major role in my decision to change my career.","tags":null,"title":"Plamen Ivanov","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy‚Äôs Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://k1lgor.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"","date":1687478400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1687478400,"objectID":"1778252f957b2e1bcf76d0d98d5886fb","permalink":"https://k1lgor.github.io/project/cython/","publishdate":"2023-06-23T00:00:00Z","relpermalink":"/project/cython/","section":"project","summary":"This repository contains a collection of benchmark scripts to compare the performance between Python and Cython implementations.","tags":["Python","Cython","Benchmark"],"title":"Python vs Cython Benchmark","type":"project"},{"authors":["Plamen Ivanov"],"categories":["Blog"],"content":" Introduction The Knapsack problem is a well-known optimization problem in computer science. Given a set of items, each with a weight and a value, the problem is to select a subset of the items that maximizes the total value while keeping the total weight below a certain limit. The problem gets its name from the idea of packing a knapsack with items of varying sizes and values.\nThe Knapsack problem is a classic example of a dynamic programming problem, which means that we can solve it efficiently by breaking it down into smaller subproblems and combining the solutions to those subproblems to find the optimal solution.\nDynamic Programming Solution The key idea behind the dynamic programming solution to the Knapsack problem is to build a table (often called a ‚ÄúDP table‚Äù) where each cell represents the optimal value for a particular combination of items and weights. The table is initialized with zeros, and then filled in using a recursive formula.\nIn the recursive formula, we consider each item in turn, and for each item, we consider all possible weights up to the maximum weight. If the weight of the current item is greater than the current weight, we cannot include the item, so we simply use the value from the previous row in the table. If the weight of the current item is less than or equal to the current weight, we have a choice: we can either include the item, in which case we add its value to the value of the optimal solution for the remaining weight, or we can exclude the item, in which case we simply use the value from the previous row in the table.\nAfter filling in the entire table, we can use it to backtrack and find the selected items that give us the maximum value. Starting from the bottom right corner of the table, we check each cell to see if its value is different from the value in the cell above it. If it is, that means we included the item corresponding to that row in the optimal solution, so we add it to our list of selected items and move to the cell in the previous row with the remaining weight.\nThe Python Implementation Here is a Python implementation of the Knapsack algorithm using dynamic programming:\ndef knapsack(items, max_weight): # Initialize a 2D array with zeros dp_table = [[0 for _ in range(max_weight + 1)] for _ in range(len(items) + 1)] # Fill the table with the optimal values for each weight and item combination for i in range(1, len(items) + 1): weight, value = items[i - 1] for w in range(1, max_weight + 1): if weight \u0026gt; w: dp_table[i][w] = dp_table[i -1][w] else: dp_table[i][w] = max(dp_table[i - 1][w], dp_table[i -1][w - weight] + value) # Backtrack to find the selected items selected_items = [] w = max_weight for i in range(len(items), 0, -1): if dp_table[i][w] != dp_table[i - 1][w]: selected_items.append(items[i - 1]) w -= items[i -1][0] # Return the total value and selected items return dp_table[-1][-1], selected_items def main(): items = [(2, 3), (3, 4), (4, 5), (5, 6)] max_weight = 8 total_value, selected_items = knapsack(items, max_weight) print(\u0026#34;Total value:\u0026#34;, total_value) print(\u0026#34;Selected items:\u0026#34;, selected_items) if __name__ == \u0026#34;__main__\u0026#34;: main() The knapsack function takes two arguments: a list of items, where each item is represented as a tuple of the form (weight, value), and a maximum weight. The function returns a tuple containing the total value of the selected items and the list of selected items themselves.\nWe have four items with weight and values (2, 3), (3, 4), (4, 5), and (5, 6). We want to find the subset of items that maximizes the total value while keeping the total weight below 8. Running the knapsack function with these arguments gives us the following output:\nTotal value: 10 Selected items: [(5, 6), (3, 4)] This means that the optimal subset of items has a total value of 10, and consists of the items with weight and values (5, 6) and (3, 4).\nConclusion The Knapsack problem is a classic optimization problem that can be efficiently solved using dynamic programming. The key idea is to build a table that represents the optimal value for each combination of items and weights, and then fill it in using a recursive formula. The resulting table can be used to backtrack and find the selected items that give us the maximum value.\nIn this article, I have shown how to implement the Knapsack algorithm in Python using dynamic programming, and provided an example of how to use it. While this implementation is relatively simple, there are many variations of the Knapsack problem with different constraints and objectives, and more sophisticated algorithms may be needed to solve them efficiently.\nThank you for reading üßë‚Äçüíª\nStay tuned for more üöÄ\n‚úåÔ∏è and logout\n","date":1683763200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683763200,"objectID":"dba9948aaac1470f4164bf33bdb78ee3","permalink":"https://k1lgor.github.io/post/knapsack/","publishdate":"2023-05-11T00:00:00Z","relpermalink":"/post/knapsack/","section":"post","summary":"A Guide to Dynamic Programming","tags":["Python","Algorithm"],"title":"Solving the Knapsack Problem","type":"post"},{"authors":["Plamen Ivanov"],"categories":["Blog"],"content":" Introduction If you‚Äôre new to Linux or have recently switched to it, you may have been overwhelmed by the vast array of commands you can use within it. These commands have a different syntax than those you might be used to in Windows or Mac systems; however, once you have an understanding of how they work, using Linux commands becomes easy and straightforward.\nIn this article, we‚Äôll provide you with a comprehensive guide on complex Linux commands. We‚Äôll explain what they are, how they work, and how you can use them to optimize your work processes. Let‚Äôs get started!\nWhat are Linux Commands? Linux commands are text-based instructions that you can use within a Linux terminal. They can help you to execute specific tasks and communicate with your computer‚Äôs operating system. The terminal is a text-based interface that you can access by typing in specific commands. You can achieve several tasks, such as copying files, starting programs, or updating your system, using only commands.\nBasic Linux Commands Let‚Äôs begin with some basic commands. These commands are used frequently and are an essential part of mastering the Linux terminal.\nls: This command lists all the files and directories in your current location. You can use the -a option to display hidden files, and the -l option to display them in long format. cd: The cd command is used to change directories. For example, cd Downloads will take you to the Downloads directory. pwd: This command displays the working directory in your terminal. mkdir: The mkdir command is used to make a new directory. For example, to create a folder called ‚Äòtest‚Äô, you can use the command mkdir test. rm: The rm command is used to remove files, and it‚Äôs often used with the -rf option to remove directories. cp: This command is used to copy files and directories from one location to another. mv: This command is used to move files and directories from one location to another. Intermediate Linux Commands Now that you are familiar with some basic Linux commands let‚Äôs look at a few intermediate level commands to enhance your Linux knowledge.\ngrep: This command is used to search for a specific word or pattern within a file. For example, to look for the word ‚Äòexample‚Äô in a file called ‚Äòfile.txt‚Äô, you can run the command grep example file.txt. find: The find command is used to search through a directory‚Äôs contents recursively. You can use it with different options such as -name to specify filenames or -size to search for specific file sizes. ps: The ps command lets you view the currently running processes on your system. You can use it with different options such as -ef to display all processes. wget: The wget command lets you download files from the internet. For example, to download a file called test.txt, you can use wget https://www.example.com/test.txt. Advanced Linux Commands Here are few advanced Linux commands that are rarely used but can be helpful in certain situations.\ndd: The dd command is used to copy and convert data. For example, to create a bootable USB drive using an ISO file, you can use the command sudo dd if=path/to/iso of=/dev/sdb bs=4M; sync. Make sure to use the correct input and output file locations. tar: The tar command is used to create compressed archives. For example, to create a .tar.gz archive of all files in the current directory, you can use the command tar -czvf archive_name.tar.gz *. awk: The awk command is used to manipulate text files. For example, to print the first column of a tab-separated values file, you can run the command awk -F\u0026#39;\\t\u0026#39; \u0026#39;{print $1}\u0026#39; file.txt. Security-focused Linux Commands Linux commands are powerful tools that can be used to perform various security-focused tasks such as user management, file permissions, and network security. In this section, we will take a look at some of the most commonly used security-focused Linux commands.\nchmod: This command is used to change the permissions of a file or directory. The permissions can be specified using a numerical code or a symbolic code. passwd: This command is used to change the password of a user account. The user is prompted to enter their old password, followed by their new password. sftp: This command is used to securely transfer files over the network. It uses the SSH protocol to encrypt the data being transferred. iptables: This command is used to manage network security by setting up rules for incoming and outgoing traffic. It can be used to block specific IP addresses or protocols. ssh: This command is used to establish a secure remote connection to another computer. It uses the SSH protocol to encrypt the data being transferred. By using these security-focused Linux commands, you can help protect your computer and network from potential security threats.\nConclusion Linux commands can seem intimidating, but once you know how they work, they become extremely useful tools. We hope this guide provided a good starting point for mastering Linux commands. Keep practicing, and you‚Äôll soon be ‚Ä¶","date":1682121600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682121600,"objectID":"2d3d3aa8c74c0248d3dfd1646426f9fe","permalink":"https://k1lgor.github.io/post/linux-commands/","publishdate":"2023-04-22T00:00:00Z","relpermalink":"/post/linux-commands/","section":"post","summary":"A Comprehensive Guide","tags":["Linux","Bash","Beginners"],"title":"Understanding Linux Commands","type":"post"},{"authors":["Plamen Ivanov"],"categories":["Blog"],"content":" Introduction If you‚Äôve ever needed to remotely access another computer, then you‚Äôre probably familiar with the ‚Äòssh‚Äô command. This powerful tool is used to securely connect to and manage remote systems, and it can be incredibly helpful for system administrators, developers, and anyone who needs to work on a remote machine. In this blog post, we‚Äôll explore some tips and tricks for using the ‚Äòssh‚Äô command like a pro.\nBasic Usage Before we dive into some more advanced features, let‚Äôs review the basic usage of the ssh command. To establish an SSH connection, simply type:\nssh username@hostname Replace username with your username on the remote system, and hostname with the IP address or domain name of the remote system. You may also need to specify a port number using the -p flag if the SSH server is running on a non-standard port.\nOnce you enter this command, you‚Äôll be prompted to enter your password for the remote system. If everything goes well, you‚Äôll be connected to the remote machine and can start running commands as if you were logged in locally.\nAdvanced Usage Now that we‚Äôve covered the basics, let‚Äôs take a look at some more advanced features of the ssh command.\nPublick Key Authentication Typing in your password every time you want to connect to a remote system can be a hassle, but luckily ssh supports public key authentication. This allows you to log in without typing your password, as long as you have a public key installed on the remote system. Here‚Äôs how to set it up:\nGenerate a public/private key pair on your local machine using the ssh-keygen command. Make sure to keep your private key safe and secure. Copy your public key to the remote system using the ssh-copy-id command. This will automatically add your public key to the remote system‚Äôs authorized keys list. Now, when you connect to the remote system, you should be able to log in without typing your password. Proxying Connections Sometimes, you may need to connect to a remote system through an intermediate server. This is where proxying comes in handy. To set up a proxy connection, use the -J flag followed by the hostname of the intermediate server:\nssh -J username@intermediate_host username@destination_host This will establish a connection to the intermediate server first, and then to the final destination.\nPort Forwarding Port forwarding is a way to forward network traffic from one port on your local machine to a port on a remote machine, through an SSH tunnel. This can be incredibly helpful for accessing services that are not available directly from your local network. Here‚Äôs an example:\nssh -L 8080:localhost:80 username@remote_host This will forward all traffic from port 8080 on your local machine to port 80 on the remote host. Now, if you open a web browser on your local machine and navigate to localhost:8080, you‚Äôll see the website that‚Äôs hosted on the remote machine.\nConclusion The ssh command is a powerful tool that can be incredibly helpful for managing remote systems. By mastering some of the advanced features we‚Äôve covered in this blog post, you‚Äôll be able to work more efficiently and securely on remote machines. Whether you‚Äôre a system administrator or a developer, understanding the ssh command is an essential skill for anyone who needs to work with remote systems.\nThank you for reading üßë‚Äçüíª\nStay tuned for more üöÄ\n‚úåÔ∏è and logout\n","date":1680998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680998400,"objectID":"2a9a4ca9e5b7b3d6e6bbc3e3e8d7c4b3","permalink":"https://k1lgor.github.io/post/ssh/","publishdate":"2023-04-09T00:00:00Z","relpermalink":"/post/ssh/","section":"post","summary":"Tips and Tricks","tags":["Linux","Bash","Beginners"],"title":"Mastering the ssh Command","type":"post"},{"authors":null,"categories":null,"content":"This repository contains a Python script for scraping data from IMDb charts. The script allows you to retrieve information from various IMDb charts, including:\nTop 250 Movies Most Popular Movies Top 250 TV Shows Most Popular TV Shows Lowest Rated Movies Top Rated English Movies Info The script extracts the title, year, and IMDb rating for each entry in the specified chart. It then writes the information to a ‚Äò.csv‚Äô file in the current directory.\nPlease note that the script skips any Movies/TV shows that do not have a rating in the charts.\nSetup To set up the IMDb web scraping script, follow these steps:\nInitialize a Python virtual environment: python -m venv venv Activate the virtual environment: # Windows: .\\venv\\Scripts\\activate # Linux: source venv/bin/activate Update the pip package manager: # Windows: python -m pip install --upgrade pip # Linux: pip install pip -U Install the required pip packages: pip install -r requirements.txt Usage: python3 main.py # or py main.py ","date":1665619200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1665619200,"objectID":"16d0eab3faeba90fa26d2e0ffe4ca99b","permalink":"https://k1lgor.github.io/project/imdb/","publishdate":"2022-10-13T00:00:00Z","relpermalink":"/project/imdb/","section":"project","summary":"Scraper for 6 categories from IMDb","tags":["Python"],"title":"IMDb Web Scraper","type":"project"},{"authors":null,"categories":null,"content":"","date":1653523200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653523200,"objectID":"7170c5a57bddf7e9df1e840dfdeff2f8","permalink":"https://k1lgor.github.io/project/hackerrank/","publishdate":"2022-05-26T00:00:00Z","relpermalink":"/project/hackerrank/","section":"project","summary":"Solutions from HackerRank","tags":["Bash","Shell","Python"],"title":"HackerRank","type":"project"},{"authors":null,"categories":null,"content":"","date":1653264e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653264e3,"objectID":"86ddefb5e4a3b246c8c0242d89d49877","permalink":"https://k1lgor.github.io/project/manutd-stats/","publishdate":"2022-05-23T00:00:00Z","relpermalink":"/project/manutd-stats/","section":"project","summary":"A website showing statistics from season 21/22","tags":["Web","Vue.js"],"title":"Manchester United Stats","type":"project"},{"authors":null,"categories":null,"content":"Setup To set up the Flask application, follow these steps:\nClone the repository to your local machine: git clone https://github.com/k1lgor/flask.git Change into the flask directory: cd flask Create a virtual environment and install the required dependencies: python -m venv venv source venv/bin/activate pip install -r requirements.txt This will create a virtual environment and install all the necessary dependencies specified in the requirements.txt file.\nStart the Flask application: flask run The application will be accessible at http://localhost:5000 in your web browser.\n","date":1652313600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652313600,"objectID":"dce9bd66b59fab8561f3544ac9382dc7","permalink":"https://k1lgor.github.io/project/flask-project/","publishdate":"2022-05-12T00:00:00Z","relpermalink":"/project/flask-project/","section":"project","summary":"A Flask project","tags":["Python","Web"],"title":"Dragos IT Academy","type":"project"},{"authors":null,"categories":null,"content":"","date":1652227200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652227200,"objectID":"c22151519d8cf81a3fa31ce33b2c2556","permalink":"https://k1lgor.github.io/project/portfolio/","publishdate":"2022-05-11T00:00:00Z","relpermalink":"/project/portfolio/","section":"project","summary":"A portfolio website using JavaScript, CSS, HTML","tags":["Web","Portfolio"],"title":"Portfolio","type":"project"},{"authors":null,"categories":null,"content":"","date":1651363200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651363200,"objectID":"fc41ef1cc13bf47d046a297fe9c016f0","permalink":"https://k1lgor.github.io/project/login-page/","publishdate":"2022-05-01T00:00:00Z","relpermalink":"/project/login-page/","section":"project","summary":"A login page with Vuetify","tags":["Web","Vue.js"],"title":"Login Page","type":"project"},{"authors":null,"categories":null,"content":"Setup To get started with macchanger, follow the steps below:\nClone the repository to your local machine: git clone https://github.com/k1lgor/macchanger.git Change into macchanger directory: cd macchanger Make the script executable: chmod +x macchanger.sh Execute the script with sudo: sudo ./macchanger.sh This will run the macchanger script with administrative privileges.\nCompatability The macchanger script is compatible with the following Linux distributions:\nArch Linux Debian-based distributions (e.g., Ubuntu) Red Hat Enterprise Linux (RHEL) Fedora openSUSE-based distributions Dependencies The script checks for the presence of ifconfig and macchanger commands and installs them if they are not already available on your system. These dependencies are necessary for macchanger to function properly.\n","date":1651363200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651363200,"objectID":"2d2d41203b40a88414586f4a1e868161","permalink":"https://k1lgor.github.io/project/macchanger/","publishdate":"2022-05-01T00:00:00Z","relpermalink":"/project/macchanger/","section":"project","summary":"A script to automatically change your MAC address","tags":["Bash","Shell"],"title":"MAC changer","type":"project"},{"authors":null,"categories":null,"content":"","date":1646956800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1646956800,"objectID":"c31ab17418e9a938e093f18c2a6b1a3d","permalink":"https://k1lgor.github.io/project/todo-vuejs/","publishdate":"2022-03-11T00:00:00Z","relpermalink":"/project/todo-vuejs/","section":"project","summary":"A simple ToDo app","tags":["Web"],"title":"ToDo app","type":"project"},{"authors":null,"categories":null,"content":"Simple WiFi DoS Attack This repository provides a simple script for conducting a Denial-of-Service (DoS) attack on WiFi networks. The attack utilizes the following tools:\nnmcli - Network Manager Command Line Interface macchanger - a utility that simplifies the manipulation of MAC addresses of network interfaces aircrack-ng - a comprehensive suite of tools for assessing WiFi network security Usage Follow the steps below to execute the DoS attack:\nChange the permission of the script file to make it executable: chmod +x wifi-dos.sh Use the following command to view all the networkds within the range of your WiFi adapter: nmcli dev wifi Copy the target SSID and the corresponding channel number, and replace the values in the script. Execute the script with sudo, as aircrack-ng requires administrative privileges: sudo ./wifi-dos.sh Demo Disclaimer This script is intended for educational purpose only. The author is not responsible for any malicious use of the content.\n","date":1646611200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1646611200,"objectID":"5b597b4a3a8e9e375d899e0c27cdde4b","permalink":"https://k1lgor.github.io/project/wifi-dos/","publishdate":"2022-03-07T00:00:00Z","relpermalink":"/project/wifi-dos/","section":"project","summary":"A simple WiFi DoS script","tags":["Bash","Shell"],"title":"WiFi DoS","type":"project"},{"authors":["Plamen Ivanov","Âê≥ÊÅ©ÈÅî"],"categories":["Demo","ÊïôÁ®ã"],"content":"import libr print(\u0026#39;hello\u0026#39;) Overview The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It‚Äôs a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more Get Started üëâ Create a new site üìö Personalize your site üí¨ Chat with the Wowchemy community or Hugo community üê¶ Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy üí° Request a feature or report a bug for Wowchemy ‚¨ÜÔ∏è Updating Wowchemy? View the Update Tutorial and Release Notes Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n‚ù§Ô∏è Click here to become a sponsor and help support Wowchemy‚Äôs future ‚ù§Ô∏è As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features ü¶Ñ‚ú®\nEcosystem Hugo Academic CLI: Automatically import publications from BibTeX Inspiration Check out the latest demo of what you‚Äôll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, ‰∏≠Êñá, and Portugu√™s Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files. Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://k1lgor.github.io/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome üëã We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","ÂºÄÊ∫ê"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":null,"categories":null,"content":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you‚Äôll find some examples of the types of technical content that can be rendered with Wowchemy.\nExamples Code Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the syntax_highlighter option in your config/_default/params.yaml file.\n```python import pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() ``` renders as\nimport pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() Mindmaps Wowchemy supports a Markdown extension for mindmaps.\nSimply insert a Markdown markmap code block and optionally set the height of the mindmap as shown in the example below.\nA simple mindmap defined as a Markdown list:\n```markmap {height=\u0026#34;200px\u0026#34;} - Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal ``` renders as\n- Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal A more advanced mindmap with formatting, code blocks, and math:\n```markmap - Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ ``` renders as\n- Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ Charts Wowchemy supports the popular Plotly format for interactive charts.\nSave your Plotly JSON in your page folder, for example line-chart.json, and then add the {{\u0026lt; chart data=\u0026#34;line-chart\u0026#34; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\nYou might also find the Plotly JSON Editor useful.\nMath Wowchemy supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.yaml file.\nTo render inline or block math, wrap your LaTeX math with {{\u0026lt; math \u0026gt;}}$...${{\u0026lt; /math \u0026gt;}} or {{\u0026lt; math \u0026gt;}}$$...$${{\u0026lt; /math \u0026gt;}}, respectively. (We wrap the LaTeX math in the Wowchemy math shortcode to prevent Hugo rendering our math as Markdown. The math shortcode is new in v5.5-dev.)\nExample math block:\n{{\u0026lt; math \u0026gt;}} $$ \\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2} $$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$ Example inline math {{\u0026lt; math \u0026gt;}}$\\nabla F(\\mathbf{x}_{n})${{\u0026lt; /math \u0026gt;}} renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the math linebreak (\\\\):\n{{\u0026lt; math \u0026gt;}} $$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$ {{\u0026lt; /math \u0026gt;}} renders as\n$$ f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases} $$ Diagrams Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ``` renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ``` renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ``` renders ‚Ä¶","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://k1lgor.github.io/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Markdown","type":"post"},{"authors":["Plamen Ivanov"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://k1lgor.github.io/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":["Plamen Ivanov"],"categories":[],"content":"from IPython.core.display import Image Image(\u0026#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png\u0026#39;) print(\u0026#34;Welcome to Academic!\u0026#34;) Welcome to Academic! Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post\u0026#39;s title date: 2019-09-01 # Put any other Academic metadata here... --- Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post‚Äôs folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=. Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://k1lgor.github.io/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let‚Äôs make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://k1lgor.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Plamen Ivanov","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://k1lgor.github.io/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Plamen Ivanov","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://k1lgor.github.io/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]